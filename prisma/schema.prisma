// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Role enum
enum Role {
  ADMIN
  STAFF
  USER
}

// Define the User model with the Role enum
model User {
  id        String    @id @default(uuid())
  username  String
  email     String    @unique
  password  String
  addresses Address[]
  phone     String    @unique

  created_at  DateTime @default(now())
  modified_at DateTime @default(now())

  orders   Order[]
  role     Role      @default(USER)
  sessions Session[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  country   String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Address {
  id            String @id @default(uuid())
  user          User   @relation(fields: [userId], references: [id])
  userId        String
  address_line1 String
  address_line2 String
  city          String
  postal_code   Int    @default(0000)
  country       String
  telephone     String
  mobile        String
}

model ProductCategory {
  id          String    @id @default(uuid())
  name        String
  desc        String
  created_at  DateTime  @default(now())
  modified_at DateTime  @updatedAt
  products    Product[]
}

model Product {
  id          String          @id @default(uuid())
  name        String
  desc        String
  SKU         String
  price       Int
  category    ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId  String
  created_at  DateTime        @default(now())
  modified_at DateTime        @updatedAt
}
